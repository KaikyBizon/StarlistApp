/* Estilo de fundo para a tela principal */
.background {
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(45deg, #333 20%, #000 70% );
    min-height: 100vh; /* Altura mínima para preencher a tela */
}

/* Removido o estilo da logo */

/* Container para o botão de voltar */

/* Removido o estilo para o botão de voltar */

/* Estilo para o container de fundo */
.backgroundContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
}

/* Container principal para os conteúdos */
.containerPagamento {
    width: 80%; /* Largura fixa para o container */
    max-width: 600px; /* Largura máxima para limitar o tamanho */
    background-color: #222;
    border-radius: 10px;
    padding: 20px;
    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.8);
    margin-top: 20px;
    display: flex; /* Alinha o conteúdo de forma consistente */
    flex-direction: column; /* Exibe o conteúdo em coluna */
    justify-content: center; /* Centraliza verticalmente o conteúdo */
    align-items: center; /* Centraliza horizontalmente o conteúdo */
    min-height: 400px; /* Altura mínima para manter o tamanho consistente */
}

/* Estilo para o método de pagamento */
.metodoPagamento {
    margin-bottom: 10px;
    width: 100%; /* Garante que o método de pagamento ocupe toda a largura do container */
    text-align: center;
}

/* Estilo para textos informativos */
.txtInfo {
    font-size: 16px;
    font-weight: bold;
    margin-bottom: 10px;
    color: #e5e344;
    text-align: center;
}

/* Estilo para o container de escolha de botão */
.btnEscolha {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    margin-bottom: 10px;
}


/* Estilo para o botão de método de pagamento selecionado */
.btnMetodoSelected {
    background-color: #faed27;
}

/* Estilo para o texto do botão */
.txtBotao {
    font-size: 16px;
    color: #edea44;
}

/* Estilo para o container do código QR */
.codigoQr {
    display: flex;
    flex-direction: column;
    align-items: center;
}

/* Estilo para informações de pagamento */
.infoPagamento {
    font-size: 16px;
    font-weight: bold;
    color: #c9c9c9;
}

/* Estilo para o código PIX */
.codigoPix {
    font-size: 18px;
    margin: 10px 0;
    color: #fff;
}

/* Estilo para informações de QR */
.infoQr {
    font-size: 16px;
    font-weight: bold;
    color: #c9c9c9;
}

/* Estilo para a imagem do código QR */
.imagemQr img {
    width: 400px; /* Define a largura da imagem */
    height: 400px; /* Define a altura da imagem */
    object-fit: contain; /* Garante que a imagem se ajuste dentro do tamanho especificado sem distorção */
}

/* Estilo para a imagem do código QR */
.code {
    width: 200px;
    height: 200px;
}

/* Estilo para o botão de pagar */
.btnPagar {
    margin-top: 20px;
    background-color: #faed27;
    padding: 15px;
    border-radius: 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    border: none;
}

/* Estilo para o texto do botão de pagar */
.txtPagar {
    font-size: 18px;
    font-weight: bold;
    color: #696969;
}

/* Estilo para o container dos dados do cartão */
.dadosCartao {
    margin-top: 20px;
}

/* Estilo para os campos de entrada */
.input {
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    width: 100%; /* Alargado para desktop */
    box-sizing: border-box;
    color: black;
    border: 1px solid #636363;
    background-color: #484848;

}

/* Estilo para a linha de inputs */
.linha {
    display: flex;
    justify-content: space-between; /* Espalha igualmente os inputs */
    width: 100%; /* Garante que a linha ocupe toda a largura do container pai */
    gap: 10px; /* Espaçamento entre os inputs */
    box-sizing: border-box; /* Inclui padding e border na largura total */
}

.input:focus, 
.inputMeio:focus {
    border-color: #faed27; /* Cor da borda enquanto digita */
    outline: none; /* Remove o contorno padrão do navegador */
    background-color: #565656; /* Cor de fundo enquanto digita */
    transition: all 0.3s ease; /* Transição suave para o efeito */
}


/* Estilo para os inputs dentro da linha */
.inputLinha {
    flex: 1; /* Permite que cada .inputLinha ocupe metade da largura do espaço disponível */
    margin: 0 5px; /* Pequeno espaço entre os inputs */
    display: flex; /* Usa flexbox para gerenciar os inputs */
    flex-direction: column; /* Mantém os inputs em coluna */
    align-items: stretch; /* Faz com que os inputs ocupem toda a largura */
}

/* Estilo para o input no meio da linha */
.inputMeio {
    width: 100%; /* Garante que os inputs ocupem 100% da largura do container */
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
    text-align: center;
    color: black;
    border: 1px solid #636363;
    box-sizing: border-box; /* Inclui padding e border na largura total */
    background-color: #484848;
}

.dadosCartao, .codigoQr {
    width: 100%; /* Garante que ambos ocupem a mesma largura dentro do container */
    /* Adicione uma altura mínima se necessário */
    min-height: 200px;
}

/* Estilo base para os botões de método de pagamento */
.btnMetodo {
    padding: 15px;
    background-color: #484848;
    border-radius: 5px;
    flex: 1;
    margin: 0 5px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    border: none;
    position: relative;
    overflow: hidden; /* Para esconder a parte do efeito de animação */
    transition: background-color 0.3s ease, transform 0.3s ease; /* Transição suave */
}

/* Efeito de foco e hover */
.btnMetodo:hover {
    background-color: #faed27; /* Cor quando hover */
    transform: translateY(-5px); /* Move o botão levemente para cima */
}

/* Efeito de animação de clique */
.btnMetodo:active {
    transform: translateY(0); /* Retorna para a posição original ao clicar */
}

/* Adiciona um efeito de sombra ao clicar */
.btnMetodo:active::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 300%;
    height: 300%;
    background: rgba(250, 237, 39, 0.5); /* Cor do efeito */
    border-radius: 50%; /* Forma circular */
    transform: translate(-50%, -50%) scale(0); /* Inicia em escala 0 */
    animation: ripple 0.6s linear forwards; /* Animação de ripple */
}

/* Animação de ripple */
@keyframes ripple {
    to {
        transform: translate(-50%, -50%) scale(1); /* Expande o efeito */
        opacity: 0; /* Torna invisível ao final */
    }
}

/* Estilo do botão selecionado */
.btnMetodoSelected {
    background-color: #faed27; /* Cor para o botão selecionado */
}
